// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, non-DAS, employed with a small employer at start, is fully " +
        "funded for on programme and completion payments")]
    [NUnit.Framework.CategoryAttribute("SmallEmployer")]
    public partial class _1LearnerAged16_18Non_DASEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPaymentsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "small_employers.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "1 learner aged 16-18, non-DAS, employed with a small employer at start, is fully " +
                    "funded for on programme and completion payments", null, ProgrammingLanguage.CSharp, new string[] {
                        "SmallEmployer"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Payment for a 16-18 non-DAS learner, small employer at start")]
        public virtual void PaymentForA16_18Non_DASLearnerSmallEmployerAtStart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment for a 16-18 non-DAS learner, small employer at start", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer"});
            table278.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "Employed",
                        "05/08/2017",
                        "12345678",
                        "SEM1"});
#line 5
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table278, "When ");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table279.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table279.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table279.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table279.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "...",
                        "500",
                        "500",
                        "2500"});
            table279.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table279.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table279.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table279.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table279.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table279.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "1000",
                        "0"});
#line 8
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table279, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table280.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table280.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table280.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table280.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table280.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
#line 20
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table280, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 19-24, non-DAS, with an Education Health Care (EHC) plan, employed" +
            " with a small employer at start, is fully funded for on programme and completion" +
            " payments")]
        public virtual void _1LearnerAged19_24Non_DASWithAnEducationHealthCareEHCPlanEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 19-24, non-DAS, with an Education Health Care (EHC) plan, employed" +
                    " with a small employer at start, is fully funded for on programme and completion" +
                    " payments", ((string[])(null)));
#line 29
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table281.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "Employed",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF2"});
#line 31
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table281, "When ");
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table282.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table282.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table282.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "...",
                        "500",
                        "500",
                        "2500"});
            table282.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table282.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "1000",
                        "0"});
#line 34
   testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table282, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table283.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table283.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table283.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table283.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table283.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
#line 46
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table283, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 19-24, non-DAS, is a care leaver, employed with a small employer a" +
            "t start, is fully funded for on programme and completion payments")]
        public virtual void _1LearnerAged19_24Non_DASIsACareLeaverEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 19-24, non-DAS, is a care leaver, employed with a small employer a" +
                    "t start, is fully funded for on programme and completion payments", ((string[])(null)));
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table284.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "Employed",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF4"});
#line 58
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table284, "When ");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table285.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "...",
                        "500",
                        "500",
                        "2500"});
            table285.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table285.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "1000",
                        "0"});
#line 62
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table285, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table286.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table286.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table286.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table286.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table286.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
#line 74
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table286, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 19-24, non-DAS, employed with a small employer at start, is co-fun" +
            "ded for on programme and completion payments (this apprentice does not have a Ed" +
            "ucation Health Care plan and is not a care leaver)")]
        public virtual void _1LearnerAged19_24Non_DASEmployedWithASmallEmployerAtStartIsCo_FundedForOnProgrammeAndCompletionPaymentsThisApprenticeDoesNotHaveAEducationHealthCarePlanAndIsNotACareLeaver()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 19-24, non-DAS, employed with a small employer at start, is co-fun" +
                    "ded for on programme and completion payments (this apprentice does not have a Ed" +
                    "ucation Health Care plan and is not a care leaver)", ((string[])(null)));
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table287.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "Employed",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        ""});
#line 85
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table287, "When ");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "08/18",
                        "09/18"});
            table288.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "1500",
                        "0"});
            table288.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "450",
                        "450",
                        "450",
                        "...",
                        "1350",
                        "0"});
            table288.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "50",
                        "...",
                        "150",
                        "0"});
            table288.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "450",
                        "450",
                        "...",
                        "450",
                        "1350"});
            table288.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150"});
            table288.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table288.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "450",
                        "450",
                        "450",
                        "...",
                        "1350",
                        "0"});
#line 89
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table288, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
            table289.AddRow(new string[] {
                        "On-program",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "0"});
            table289.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1350"});
            table289.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 101
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table289, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Payment for a 16-18 non-DAS learner, employer is not small")]
        public virtual void PaymentForA16_18Non_DASLearnerEmployerIsNotSmall()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Payment for a 16-18 non-DAS learner, employer is not small", ((string[])(null)));
#line 108
 this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer"});
            table290.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "Employed",
                        "05/08/2017",
                        "12345678",
                        ""});
#line 110
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table290, "When ");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table291.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "500",
                        "...",
                        "500",
                        "2500",
                        "0"});
            table291.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "450",
                        "450",
                        "450",
                        "1450",
                        "450",
                        "...",
                        "450",
                        "2350",
                        "0"});
            table291.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150",
                        "0"});
            table291.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "450",
                        "450",
                        "450",
                        "1450",
                        "...",
                        "450",
                        "450",
                        "2350"});
            table291.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "50",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "50",
                        "150"});
            table291.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table291.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table291.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table291.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "450",
                        "450",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "1350",
                        "0"});
            table291.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "1000",
                        "0"});
#line 113
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table291, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table292.AddRow(new string[] {
                        "On-program",
                        "450",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "0"});
            table292.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1350"});
            table292.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table292.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table292.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
#line 125
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table292, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
