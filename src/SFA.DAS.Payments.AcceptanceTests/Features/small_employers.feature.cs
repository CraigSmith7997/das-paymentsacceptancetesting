// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, non-DAS, employed with a small employer at start, is fully " +
        "funded for on programme and completion payments")]
    public partial class _1LearnerAged16_18Non_DASEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPaymentsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "small_employers.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "1 learner aged 16-18, non-DAS, employed with a small employer at start, is fully " +
                    "funded for on programme and completion payments", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC1-Payment for a 16-18 non-DAS learner, small employer at start")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDas")]
        public virtual void AC1_PaymentForA16_18Non_DASLearnerSmallEmployerAtStart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC1-Payment for a 16-18 non-DAS learner, small employer at start", new string[] {
                        "SmallEmployerNonDas"});
#line 4
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table389 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer"});
            table389.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1"});
#line 5
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table389, "When ");
#line hidden
            TechTalk.SpecFlow.Table table390 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table390.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table390.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table390.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table390.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table390.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table390.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 8
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table390, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table391 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table391.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table391.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table391.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table391.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table391.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table391.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table391.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table391.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table391.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 21
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table391, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC2- 1 learner aged 19-24, non-DAS, with an Education Health Care (EHC) plan, In " +
            "paid employment with a small employer at start, is fully funded for on programme" +
            " and completion payments")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDas")]
        public virtual void AC2_1LearnerAged19_24Non_DASWithAnEducationHealthCareEHCPlanInPaidEmploymentWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC2- 1 learner aged 19-24, non-DAS, with an Education Health Care (EHC) plan, In " +
                    "paid employment with a small employer at start, is fully funded for on programme" +
                    " and completion payments", new string[] {
                        "SmallEmployerNonDas"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table392 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table392.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF2"});
#line 36
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table392, "When ");
#line hidden
            TechTalk.SpecFlow.Table table393 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table393.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table393.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table393.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table393.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table393.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table393.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table393.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table393.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table393.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table393.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 39
  testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table393, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table394 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table394.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table394.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table394.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table394.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table394.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table394.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table394.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table394.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table394.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 52
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table394, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC3- 1 learner aged 19-24, non-DAS, is a care leaver, In paid employment with a s" +
            "mall employer at start, is fully funded for on programme and completion payments" +
            "")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDas")]
        public virtual void AC3_1LearnerAged19_24Non_DASIsACareLeaverInPaidEmploymentWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC3- 1 learner aged 19-24, non-DAS, is a care leaver, In paid employment with a s" +
                    "mall employer at start, is fully funded for on programme and completion payments" +
                    "", new string[] {
                        "SmallEmployerNonDas"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table395 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table395.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF4"});
#line 68
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table395, "When ");
#line hidden
            TechTalk.SpecFlow.Table table396 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table396.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table396.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table396.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table396.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table396.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table396.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table396.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table396.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table396.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table396.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 72
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table396, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table397 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table397.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table397.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table397.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table397.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table397.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table397.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table397.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table397.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 85
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table397, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC4- 1 learner aged 19-24, non-DAS, employed with a small employer at start, is c" +
            "o-funded for on programme and completion payments (this apprentice does not have" +
            " a Education Health Care plan and is not a care leaver)")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDas")]
        public virtual void AC4_1LearnerAged19_24Non_DASEmployedWithASmallEmployerAtStartIsCo_FundedForOnProgrammeAndCompletionPaymentsThisApprenticeDoesNotHaveAEducationHealthCarePlanAndIsNotACareLeaver()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC4- 1 learner aged 19-24, non-DAS, employed with a small employer at start, is c" +
                    "o-funded for on programme and completion payments (this apprentice does not have" +
                    " a Education Health Care plan and is not a care leaver)", new string[] {
                        "SmallEmployerNonDas"});
#line 97
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table398 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table398.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        ""});
#line 99
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table398, "When ");
#line hidden
            TechTalk.SpecFlow.Table table399 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "08/18",
                        "09/18"});
            table399.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "1500",
                        "0"});
            table399.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "450",
                        "450",
                        "450",
                        "...",
                        "1350",
                        "0"});
            table399.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "50",
                        "...",
                        "150",
                        "0"});
            table399.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "450",
                        "450",
                        "...",
                        "450",
                        "1350"});
            table399.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150"});
            table399.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table399.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table399.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table399.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "450",
                        "450",
                        "450",
                        "...",
                        "1350",
                        "0"});
#line 103
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table399, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table400 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
            table400.AddRow(new string[] {
                        "On-program",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "0"});
            table400.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1350"});
            table400.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 115
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table400, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC5- Payment for a 16-18 non-DAS learner, employer is not small")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDas")]
        public virtual void AC5_PaymentForA16_18Non_DASLearnerEmployerIsNotSmall()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC5- Payment for a 16-18 non-DAS learner, employer is not small", new string[] {
                        "SmallEmployerNonDas"});
#line 121
 this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table401 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer"});
            table401.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        ""});
#line 123
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table401, "When ");
#line hidden
            TechTalk.SpecFlow.Table table402 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table402.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table402.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "570",
                        "570",
                        "570",
                        "1570",
                        "570",
                        "...",
                        "570",
                        "2710",
                        "0"});
            table402.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150",
                        "0"});
            table402.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "570",
                        "570",
                        "570",
                        "1570",
                        "...",
                        "570",
                        "570",
                        "2710"});
            table402.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "50",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "50",
                        "150"});
            table402.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table402.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table402.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table402.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "450",
                        "450",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "1350",
                        "0"});
            table402.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 126
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table402, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table403 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table403.AddRow(new string[] {
                        "On-program",
                        "450",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "0"});
            table403.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1350"});
            table403.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table403.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table403.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table403.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table403.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table403.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table403.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 138
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table403, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC6- 1 learner aged 16-18, non-DAS. Second employment status record added with sa" +
            "me employer id but small employer flag removed. Learner retains small employer f" +
            "unding.")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerNonDasMultipleEmploymentStatuses")]
        public virtual void AC6_1LearnerAged16_18Non_DAS_SecondEmploymentStatusRecordAddedWithSameEmployerIdButSmallEmployerFlagRemoved_LearnerRetainsSmallEmployerFunding_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC6- 1 learner aged 16-18, non-DAS. Second employment status record added with sa" +
                    "me employer id but small employer flag removed. Learner retains small employer f" +
                    "unding.", new string[] {
                        "SmallEmployerNonDasMultipleEmploymentStatuses"});
#line 151
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table404 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price"});
            table404.AddRow(new string[] {
                        "1234567891",
                        "16-18 programme only non-DAS",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "7500"});
#line 153
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table404, "When ");
#line hidden
            TechTalk.SpecFlow.Table table405 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer ID",
                        "Employment Status",
                        "Employment Status Applies",
                        "Small Employer"});
            table405.AddRow(new string[] {
                        "123456",
                        "in paid employment",
                        "05/08/2017",
                        "SEM1"});
            table405.AddRow(new string[] {
                        "123456",
                        "in paid employment",
                        "05/10/2017",
                        ""});
#line 156
 testRunner.And("the employment status in the ILR is:", ((string)(null)), table405, "And ");
#line hidden
            TechTalk.SpecFlow.Table table406 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table406.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "2860",
                        "0"});
            table406.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "2860",
                        "0"});
            table406.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table406.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "2860"});
            table406.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table406.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table406.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table406.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table406.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "1500",
                        "0"});
            table406.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "1360",
                        "0"});
#line 160
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table406, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table407 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table407.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table407.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table407.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table407.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table407.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table407.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table407.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table407.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table407.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 172
  testRunner.And("the transaction types for the payments are:", ((string)(null)), table407, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC7- Payment for a 16-18 DAS learner, small employer at start")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerDas")]
        public virtual void AC7_PaymentForA16_18DASLearnerSmallEmployerAtStart()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC7- Payment for a 16-18 DAS learner, small employer at start", new string[] {
                        "SmallEmployerDas"});
#line 187
 this.ScenarioSetup(scenarioInfo);
#line 188
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table408 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date"});
            table408.AddRow(new string[] {
                        "learner a",
                        "403",
                        "2",
                        "1",
                        "7500",
                        "06/08/2017"});
#line 189
    testRunner.And("the following commitments exist:", ((string)(null)), table408, "And ");
#line hidden
            TechTalk.SpecFlow.Table table409 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer"});
            table409.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1"});
#line 192
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table409, "When ");
#line hidden
            TechTalk.SpecFlow.Table table410 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table410.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table410.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table410.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table410.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table410.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table410.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table410.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table410.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table410.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 195
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table410, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table411 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table411.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table411.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table411.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table411.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table411.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table411.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table411.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table411.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table411.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 207
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table411, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC8- Scenario: 1 learner aged 19-24, DAS, with an Education Health Care (EHC) pla" +
            "n, employed with a small employer at start, is fully funded for on programme and" +
            " completion payments")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerDas")]
        public virtual void AC8_Scenario1LearnerAged19_24DASWithAnEducationHealthCareEHCPlanEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC8- Scenario: 1 learner aged 19-24, DAS, with an Education Health Care (EHC) pla" +
                    "n, employed with a small employer at start, is fully funded for on programme and" +
                    " completion payments", new string[] {
                        "SmallEmployerDas"});
#line 220
 this.ScenarioSetup(scenarioInfo);
#line 221
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table412 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date"});
            table412.AddRow(new string[] {
                        "learner a",
                        "403",
                        "2",
                        "1",
                        "7500",
                        "06/08/2017"});
#line 222
    testRunner.And("the following commitments exist:", ((string)(null)), table412, "And ");
#line hidden
            TechTalk.SpecFlow.Table table413 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table413.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF2"});
#line 225
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table413, "When ");
#line hidden
            TechTalk.SpecFlow.Table table414 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table414.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table414.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table414.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table414.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table414.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table414.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table414.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table414.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table414.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 228
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table414, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table415 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table415.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table415.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table415.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table415.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table415.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table415.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table415.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table415.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table415.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 240
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table415, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC9- 1 learner aged 19-24, DAS, is a care leaver, employed with a small employer " +
            "at start, is fully funded for on programme and completion payments")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerDas")]
        public virtual void AC9_1LearnerAged19_24DASIsACareLeaverEmployedWithASmallEmployerAtStartIsFullyFundedForOnProgrammeAndCompletionPayments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC9- 1 learner aged 19-24, DAS, is a care leaver, employed with a small employer " +
                    "at start, is fully funded for on programme and completion payments", new string[] {
                        "SmallEmployerDas"});
#line 253
this.ScenarioSetup(scenarioInfo);
#line 254
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table416 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date"});
            table416.AddRow(new string[] {
                        "learner a",
                        "403",
                        "2",
                        "1",
                        "7500",
                        "06/08/2017"});
#line 255
    testRunner.And("the following commitments exist:", ((string)(null)), table416, "And ");
#line hidden
            TechTalk.SpecFlow.Table table417 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table417.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        "EEF4"});
#line 258
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table417, "When ");
#line hidden
            TechTalk.SpecFlow.Table table418 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table418.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table418.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table418.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table418.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table418.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table418.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table418.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table418.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table418.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 261
    testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table418, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table419 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table419.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table419.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table419.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table419.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table419.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table419.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table419.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table419.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table419.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 273
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table419, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC10- 1 learner aged 19-24, DAS, employed with a small employer at start, is fund" +
            "ed using levy for on programme and completion payments (this apprentice does not" +
            " have a Education Health Care plan and is not a care leaver)")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerDas")]
        public virtual void AC10_1LearnerAged19_24DASEmployedWithASmallEmployerAtStartIsFundedUsingLevyForOnProgrammeAndCompletionPaymentsThisApprenticeDoesNotHaveAEducationHealthCarePlanAndIsNotACareLeaver()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC10- 1 learner aged 19-24, DAS, employed with a small employer at start, is fund" +
                    "ed using levy for on programme and completion payments (this apprentice does not" +
                    " have a Education Health Care plan and is not a care leaver)", new string[] {
                        "SmallEmployerDas"});
#line 287
this.ScenarioSetup(scenarioInfo);
#line 289
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table420 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date"});
            table420.AddRow(new string[] {
                        "learner a",
                        "403",
                        "2",
                        "1",
                        "7500",
                        "06/08/2017"});
#line 290
    testRunner.And("the following commitments exist:", ((string)(null)), table420, "And ");
#line hidden
            TechTalk.SpecFlow.Table table421 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table421.AddRow(new string[] {
                        "learner a",
                        "19-24 programme only DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "SEM1",
                        ""});
#line 293
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table421, "When ");
#line hidden
            TechTalk.SpecFlow.Table table422 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table422.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table422.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table422.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table422.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
            table422.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table422.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
            table422.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table422.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table422.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 296
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table422, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table423 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table423.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table423.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table423.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table423.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table423.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 308
    testRunner.And("the transaction types for the payments are:", ((string)(null)), table423, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC11- Payment for a 16-18 DAS learner, employer is not small")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerDas")]
        public virtual void AC11_PaymentForA16_18DASLearnerEmployerIsNotSmall()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC11- Payment for a 16-18 DAS learner, employer is not small", new string[] {
                        "SmallEmployerDas"});
#line 318
this.ScenarioSetup(scenarioInfo);
#line 320
    testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table424 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "agreed price",
                        "start date"});
            table424.AddRow(new string[] {
                        "learner a",
                        "403",
                        "2",
                        "1",
                        "7500",
                        "06/08/2017"});
#line 321
    testRunner.And("the following commitments exist:", ((string)(null)), table424, "And ");
#line hidden
            TechTalk.SpecFlow.Table table425 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code",
                        "Employment Status",
                        "Employment Status Applies",
                        "Employer Id",
                        "Small Employer",
                        "LearnDelFAM"});
            table425.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1",
                        "In paid employment",
                        "05/08/2017",
                        "12345678",
                        "",
                        ""});
#line 324
    testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table425, "When ");
#line hidden
            TechTalk.SpecFlow.Table table426 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18",
                        "09/18"});
            table426.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table426.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "620",
                        "2860",
                        "0"});
            table426.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table426.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "620",
                        "2860"});
            table426.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table426.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
            table426.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
            table426.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table426.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "120",
                        "1360",
                        "0"});
#line 328
 testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table426, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table427 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table427.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table427.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table427.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table427.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table427.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table427.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table427.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table427.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table427.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 340
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table427, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC12- Payment for a 16-18 non-DAS learner, small employer at start, change to lar" +
            "ge employer")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerMultipleEmploymentStatus")]
        public virtual void AC12_PaymentForA16_18Non_DASLearnerSmallEmployerAtStartChangeToLargeEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC12- Payment for a 16-18 non-DAS learner, small employer at start, change to lar" +
                    "ge employer", new string[] {
                        "SmallEmployerMultipleEmploymentStatus"});
#line 354
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table428 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table428.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 355
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table428, "When ");
#line hidden
            TechTalk.SpecFlow.Table table429 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer Id",
                        "Employment Status",
                        "Employment Status Applies",
                        "Small Employer"});
            table429.AddRow(new string[] {
                        "12345678",
                        "in paid employment",
                        "05/08/2017",
                        "SEM1"});
            table429.AddRow(new string[] {
                        "98765432",
                        "in paid employment",
                        "05/10/2017",
                        ""});
#line 358
    testRunner.And("the employment status in the ILR is:", ((string)(null)), table429, "And ");
#line hidden
            TechTalk.SpecFlow.Table table430 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table430.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "2860",
                        "0"});
            table430.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "620",
                        "620",
                        "570",
                        "1570",
                        "570",
                        "...",
                        "2710",
                        "0"});
            table430.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "50",
                        "50",
                        "50",
                        "...",
                        "150",
                        "0"});
            table430.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "620",
                        "620",
                        "570",
                        "1570",
                        "...",
                        "570",
                        "2710"});
            table430.AddRow(new string[] {
                        "Payment due from Employer 98765432",
                        "0",
                        "0",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150"});
            table430.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table430.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table430.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table430.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "500",
                        "500",
                        "450",
                        "450",
                        "450",
                        "...",
                        "1350",
                        "0"});
            table430.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "1360",
                        "0"});
#line 362
  testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table430, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table431 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table431.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "450",
                        "450",
                        "...",
                        "450",
                        "0"});
            table431.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1350"});
            table431.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table431.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table431.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table431.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table431.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table431.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table431.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 374
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table431, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("AC13- Payment for a 16-18 non-DAS learner, large employer at start, change to sma" +
            "ll employer")]
        [NUnit.Framework.CategoryAttribute("SmallEmployerMultipleEmploymentStatus")]
        public virtual void AC13_PaymentForA16_18Non_DASLearnerLargeEmployerAtStartChangeToSmallEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AC13- Payment for a 16-18 non-DAS learner, large employer at start, change to sma" +
                    "ll employer", new string[] {
                        "SmallEmployerMultipleEmploymentStatus"});
#line 390
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table432 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "framework code",
                        "programme type",
                        "pathway code"});
            table432.AddRow(new string[] {
                        "learner a",
                        "16-18 programme only non-DAS",
                        "7500",
                        "06/08/2017",
                        "08/08/2018",
                        "08/08/2018",
                        "completed",
                        "403",
                        "2",
                        "1"});
#line 391
 testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table432, "When ");
#line hidden
            TechTalk.SpecFlow.Table table433 = new TechTalk.SpecFlow.Table(new string[] {
                        "Employer Id",
                        "Employment Status",
                        "Employment Status Applies",
                        "Small Employer"});
            table433.AddRow(new string[] {
                        "12345678",
                        "in paid employment",
                        "05/08/2017",
                        ""});
            table433.AddRow(new string[] {
                        "98765432",
                        "in paid employment",
                        "05/10/2017",
                        "SEM1"});
#line 394
    testRunner.And("the employment status in the ILR is:", ((string)(null)), table433, "And ");
#line hidden
            TechTalk.SpecFlow.Table table434 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table434.AddRow(new string[] {
                        "Provider Earned Total",
                        "620",
                        "620",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "2860",
                        "0"});
            table434.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "570",
                        "570",
                        "620",
                        "1620",
                        "620",
                        "...",
                        "2860",
                        "0"});
            table434.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table434.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "570",
                        "570",
                        "620",
                        "1620",
                        "...",
                        "620",
                        "2860"});
            table434.AddRow(new string[] {
                        "Payment due from Employer 12345678",
                        "50",
                        "50",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table434.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table434.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table434.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table434.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "450",
                        "450",
                        "500",
                        "500",
                        "500",
                        "...",
                        "1500",
                        "0"});
            table434.AddRow(new string[] {
                        "SFA non-Levy additional payments budget",
                        "120",
                        "120",
                        "120",
                        "1120",
                        "120",
                        "...",
                        "1360",
                        "0"});
#line 398
  testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table434, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table435 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "08/18",
                        "09/18"});
            table435.AddRow(new string[] {
                        "On-program",
                        "450",
                        "450",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table435.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "1500"});
            table435.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table435.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table435.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500",
                        "...",
                        "0",
                        "500"});
            table435.AddRow(new string[] {
                        "Framework uplift on-program",
                        "120",
                        "120",
                        "120",
                        "120",
                        "...",
                        "120",
                        "0"});
            table435.AddRow(new string[] {
                        "Framework uplift completion",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "360"});
            table435.AddRow(new string[] {
                        "Framework uplift balancing",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table435.AddRow(new string[] {
                        "Provider disadvantage uplift",
                        "0",
                        "0",
                        "0",
                        "0",
                        "..",
                        "0",
                        "0"});
#line 410
 testRunner.And("the transaction types for the payments are:", ((string)(null)), table435, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
