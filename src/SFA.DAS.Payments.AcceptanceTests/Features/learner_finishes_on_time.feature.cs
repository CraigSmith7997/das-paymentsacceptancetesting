// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where learner completes on time and is funded by l" +
        "evy")]
    public partial class ProviderEarningsAndPaymentsWhereLearnerCompletesOnTimeAndIsFundedByLevyFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "learner_finishes_on_time.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where learner completes on time and is funded by l" +
                    "evy", @"    For earnings, the total cost of training for an apprentice is split between:
    - 80% of the total cost split into equal monthly instalments
    - 20% of the total cost held back until completion

    For payments, where there is no lag in ILR submission, payments follow these rules:
    - Provider payment follows the month after earnings
    - This is due to the fact that activity relating to earnings is captured for funding purposes on the fourth working day of the next calendar month
    - The levy account is debited in the same month as payment is made (although at different times in the month)
    - Spend against budget is represented against the month in which funding is earned
    - Where a levy account is used for funding, payments are made against the SFA Levy budget
    - Levy funds are used until they run out, and then co-funding is used
    - The order in which learners are funded is derived from the priorities of the commitments", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 16
    #line 17
        testRunner.Given("the apprenticeship funding band maximum for each learner is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A DAS learner, levy available, learner finishes on time")]
        public virtual void ADASLearnerLevyAvailableLearnerFinishesOnTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A DAS learner, levy available, learner finishes on time", ((string[])(null)));
#line 19
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line 20
        testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table236.AddRow(new string[] {
=======
            table218.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "programme only DAS",
                        "15000",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 21
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table236, "When ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table218, "When ");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table237.AddRow(new string[] {
=======
            table219.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 24
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table237, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table219, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A DAS learner, no levy available, learner finishes on time")]
        public virtual void ADASLearnerNoLevyAvailableLearnerFinishesOnTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A DAS learner, no levy available, learner finishes on time", ((string[])(null)));
#line 34
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line 35
        testRunner.Given("levy balance = 0 for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table238.AddRow(new string[] {
=======
            table220.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "programme only DAS",
                        "15000",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 36
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table238, "When ");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table220, "When ");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "300",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "2700"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table239.AddRow(new string[] {
=======
            table221.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 39
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table239, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table221, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 DAS learners, only enough levy to cover 1")]
        public virtual void _2DASLearnersOnlyEnoughLevyToCover1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 DAS learners, only enough levy to cover 1", ((string[])(null)));
#line 52
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
<<<<<<< HEAD
            table240.AddRow(new string[] {
=======
            table222.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "0",
                        "500",
                        "500",
                        "500",
                        "500",
                        "1500"});
#line 53
<<<<<<< HEAD
        testRunner.Given("the employer\'s levy balance is:", ((string)(null)), table240, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "priority"});
            table241.AddRow(new string[] {
                        "learner a",
                        "1"});
            table241.AddRow(new string[] {
                        "learner b",
                        "2"});
#line 56
        testRunner.And("the following commitments exist:", ((string)(null)), table241, "And ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Given("the employer\'s levy balance is:", ((string)(null)), table222, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "priority"});
            table223.AddRow(new string[] {
                        "learner a",
                        "1"});
            table223.AddRow(new string[] {
                        "learner b",
                        "2"});
#line 56
        testRunner.And("the following commitments exist:", ((string)(null)), table223, "And ");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "ULN",
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table242.AddRow(new string[] {
=======
            table224.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner a",
                        "7500",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
<<<<<<< HEAD
            table242.AddRow(new string[] {
=======
            table224.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner b",
                        "15000",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 60
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table242, "When ");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table224, "When ");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1500",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "4500",
                        "0"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "1350",
                        "1400",
                        "1400",
                        "...",
                        "1400",
                        "4200",
                        "0"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer",
                        "150",
                        "100",
                        "100",
                        "...",
                        "100",
                        "300",
                        "0"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "1400",
                        "1400",
                        "...",
                        "1400",
                        "1400",
                        "4200"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "150",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Levy account debited",
                        "0",
                        "0",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "1350",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table243.AddRow(new string[] {
=======
            table225.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 64
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table243, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table225, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A non-DAS learner, learner finishes on time")]
        public virtual void ANon_DASLearnerLearnerFinishesOnTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A non-DAS learner, learner finishes on time", ((string[])(null)));
#line 77
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table244.AddRow(new string[] {
=======
            table226.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "15000",
                        "programme only non-DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 78
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table244, "When ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table226, "When ");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer",
                        "100",
                        "100",
                        "100",
                        "...",
                        "100",
                        "300",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "...",
                        "900",
                        "900",
                        "2700"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "100",
                        "100",
                        "...",
                        "100",
                        "100",
                        "300"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table245.AddRow(new string[] {
=======
            table227.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "900",
                        "900",
                        "900",
                        "...",
                        "900",
                        "2700",
                        "0"});
#line 81
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table245, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table227, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 DAS Learner, not enough levy to cover full payment")]
        public virtual void _1DASLearnerNotEnoughLevyToCoverFullPayment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 DAS Learner, not enough levy to cover full payment", ((string[])(null)));
#line 94
 this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
<<<<<<< HEAD
            table246.AddRow(new string[] {
=======
            table228.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "1500"});
#line 95
<<<<<<< HEAD
        testRunner.Given("the employer\'s levy balance is:", ((string)(null)), table246, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Given("the employer\'s levy balance is:", ((string)(null)), table228, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner type",
                        "agreed price",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table247.AddRow(new string[] {
=======
            table229.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "programme only DAS",
                        "15000",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 98
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table247, "When ");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table229, "When ");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "950",
                        "950",
                        "950",
                        "...",
                        "950",
                        "2850",
                        "0"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150",
                        "0"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "950",
                        "950",
                        "...",
                        "950",
                        "950",
                        "2850"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "50",
                        "50",
                        "...",
                        "50",
                        "50",
                        "150"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "450",
                        "450",
                        "450",
                        "...",
                        "450",
                        "1350",
                        "0"});
<<<<<<< HEAD
            table248.AddRow(new string[] {
=======
            table230.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 101
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table248, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table230, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 learners, 2 employers, 1 provider - enough levy")]
        public virtual void _2Learners2Employers1Provider_EnoughLevy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 learners, 2 employers, 1 provider - enough levy", ((string[])(null)));
#line 114
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line 115
        testRunner.Given("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
        testRunner.And("the employer 2 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Employer",
                        "ULN",
                        "priority",
                        "agreed price"});
<<<<<<< HEAD
            table249.AddRow(new string[] {
=======
            table231.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "learner a",
                        "1",
                        "7500"});
<<<<<<< HEAD
            table249.AddRow(new string[] {
=======
            table231.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 2",
                        "learner b",
                        "1",
                        "15000"});
#line 117
<<<<<<< HEAD
        testRunner.And("the following commitments exist:", ((string)(null)), table249, "And ");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.And("the following commitments exist:", ((string)(null)), table231, "And ");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "ULN",
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table250.AddRow(new string[] {
=======
            table232.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner a",
                        "7500",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
<<<<<<< HEAD
            table250.AddRow(new string[] {
=======
            table232.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner b",
                        "15000",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 121
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table250, "When ");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table232, "When ");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1500",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "4500",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "1500",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "4500",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 2",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "1500",
                        "4500"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 2",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 2 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "1500",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table251.AddRow(new string[] {
=======
            table233.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 125
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table251, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table233, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 learners, 2 employers, 1 provider - not enough levy")]
        public virtual void _2Learners2Employers1Provider_NotEnoughLevy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 learners, 2 employers, 1 provider - not enough levy", ((string[])(null)));
#line 141
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
<<<<<<< HEAD
            table252.AddRow(new string[] {
=======
            table234.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "0",
                        "100",
                        "100",
                        "100",
                        "250",
                        "500"});
#line 142
<<<<<<< HEAD
        testRunner.Given("the employer 1 has a levy balance of:", ((string)(null)), table252, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Given("the employer 1 has a levy balance of:", ((string)(null)), table234, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
<<<<<<< HEAD
            table253.AddRow(new string[] {
=======
            table235.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "500",
                        "500",
                        "500",
                        "500",
                        "500",
                        "1500"});
#line 145
<<<<<<< HEAD
        testRunner.And("the employer 2 has a levy balance of:", ((string)(null)), table253, "And ");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.And("the employer 2 has a levy balance of:", ((string)(null)), table235, "And ");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Employer",
                        "ULN",
                        "priority",
                        "agreed price"});
<<<<<<< HEAD
            table254.AddRow(new string[] {
=======
            table236.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "learner a",
                        "1",
                        "7500"});
<<<<<<< HEAD
            table254.AddRow(new string[] {
=======
            table236.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 2",
                        "learner b",
                        "1",
                        "15000"});
#line 148
<<<<<<< HEAD
        testRunner.And("the following commitments exist:", ((string)(null)), table254, "And ");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.And("the following commitments exist:", ((string)(null)), table236, "And ");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "ULN",
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table255.AddRow(new string[] {
=======
            table237.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner a",
                        "7500",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
<<<<<<< HEAD
            table255.AddRow(new string[] {
=======
            table237.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "learner b",
                        "15000",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 152
<<<<<<< HEAD
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table255, "When ");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table237, "When ");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1500",
                        "1500",
                        "1500",
                        "...",
                        "1500",
                        "4500",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "1400",
                        "1410",
                        "1410",
                        "...",
                        "1425",
                        "4250",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "50",
                        "40",
                        "40",
                        "...",
                        "25",
                        "100",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 2",
                        "50",
                        "50",
                        "50",
                        "...",
                        "50",
                        "150",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "1400",
                        "1410",
                        "...",
                        "1410",
                        "1410",
                        "4250"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 1",
                        "0",
                        "50",
                        "40",
                        "...",
                        "40",
                        "25",
                        "100"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 2",
                        "0",
                        "50",
                        "50",
                        "...",
                        "50",
                        "50",
                        "150"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "0",
                        "100",
                        "...",
                        "100",
                        "250",
                        "500"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 2 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "500",
                        "600",
                        "600",
                        "...",
                        "750",
                        "2000",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "900",
                        "810",
                        "810",
                        "...",
                        "675",
                        "2250",
                        "0"});
<<<<<<< HEAD
            table256.AddRow(new string[] {
=======
            table238.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 156
<<<<<<< HEAD
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table256, "Then ");
=======
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table238, "Then ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 learners, 1 employer, 2 providers - enough levy")]
        public virtual void _2Learners1Employer2Providers_EnoughLevy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 learners, 1 employer, 2 providers - enough levy", ((string[])(null)));
#line 172
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line 173
        testRunner.Given("the employer 1 has a levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Employer",
                        "Provider",
                        "ULN",
                        "priority",
                        "agreed price"});
<<<<<<< HEAD
            table257.AddRow(new string[] {
=======
            table239.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "provider A",
                        "learner a",
                        "1",
                        "7500"});
<<<<<<< HEAD
            table257.AddRow(new string[] {
=======
            table239.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "provider B",
                        "learner b",
                        "2",
                        "15000"});
#line 174
<<<<<<< HEAD
        testRunner.And("the following commitments exist:", ((string)(null)), table257, "And ");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.And("the following commitments exist:", ((string)(null)), table239, "And ");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider",
                        "ULN",
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table258.AddRow(new string[] {
=======
            table240.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "provider A",
                        "learner a",
                        "7500",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
<<<<<<< HEAD
            table258.AddRow(new string[] {
=======
            table240.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "provider B",
                        "learner b",
                        "15000",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 178
<<<<<<< HEAD
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table258, "When ");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table240, "When ");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1500"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table259.AddRow(new string[] {
=======
            table241.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 182
<<<<<<< HEAD
        testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table259, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table241, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "1000",
                        "3000"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
<<<<<<< HEAD
            table260.AddRow(new string[] {
=======
            table242.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 193
<<<<<<< HEAD
        testRunner.And("the earnings and payments break down for provider B is as follows:", ((string)(null)), table260, "And ");
=======
        testRunner.And("the earnings and payments break down for provider B is as follows:", ((string)(null)), table242, "And ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("2 learners, 1 employer, 2 providers - not enough levy")]
        public virtual void _2Learners1Employer2Providers_NotEnoughLevy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2 learners, 1 employer, 2 providers - not enough levy", ((string[])(null)));
#line 206
    this.ScenarioSetup(scenarioInfo);
#line 16
    this.FeatureBackground();
#line hidden
<<<<<<< HEAD
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
=======
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18"});
<<<<<<< HEAD
            table261.AddRow(new string[] {
=======
            table243.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "750",
                        "750",
                        "750",
                        "750",
                        "1000",
                        "1000"});
#line 207
<<<<<<< HEAD
        testRunner.Given("the employer 1 has a levy balance of:", ((string)(null)), table261, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Given("the employer 1 has a levy balance of:", ((string)(null)), table243, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Employer",
                        "Provider",
                        "ULN",
                        "priority",
                        "agreed price"});
<<<<<<< HEAD
            table262.AddRow(new string[] {
=======
            table244.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "provider A",
                        "learner a",
                        "1",
                        "7500"});
<<<<<<< HEAD
            table262.AddRow(new string[] {
=======
            table244.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1",
                        "provider B",
                        "learner b",
                        "2",
                        "15000"});
#line 210
<<<<<<< HEAD
        testRunner.And("the following commitments exist:", ((string)(null)), table262, "And ");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.And("the following commitments exist:", ((string)(null)), table244, "And ");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider",
                        "ULN",
                        "agreed price",
                        "learner type",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status"});
<<<<<<< HEAD
            table263.AddRow(new string[] {
=======
            table245.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "provider A",
                        "learner a",
                        "7500",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
<<<<<<< HEAD
            table263.AddRow(new string[] {
=======
            table245.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "provider B",
                        "learner b",
                        "15000",
                        "programme only DAS",
                        "01/09/2017",
                        "08/09/2018",
                        "08/09/2018",
                        "completed"});
#line 214
<<<<<<< HEAD
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table263, "When ");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table245, "When ");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1500",
                        "0"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1450",
                        "0"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "50",
                        "0"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1450"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 1",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "50"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "1000"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "1000",
                        "0"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "450",
                        "0"});
<<<<<<< HEAD
            table264.AddRow(new string[] {
=======
            table246.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 218
<<<<<<< HEAD
        testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table264, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
=======
        testRunner.Then("the earnings and payments break down for provider A is as follows:", ((string)(null)), table246, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "...",
                        "08/18",
                        "09/18",
                        "10/18"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "3000",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from SFA",
                        "925",
                        "925",
                        "925",
                        "...",
                        "950",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Earned from Employer 1",
                        "75",
                        "75",
                        "75",
                        "...",
                        "50",
                        "300",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Provider Paid by SFA",
                        "0",
                        "925",
                        "925",
                        "...",
                        "925",
                        "950",
                        "2700"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "Payment due from Employer 1",
                        "0",
                        "75",
                        "75",
                        "...",
                        "75",
                        "50",
                        "300"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "employer 1 Levy account debited",
                        "0",
                        "250",
                        "250",
                        "...",
                        "250",
                        "500",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy employer budget",
                        "250",
                        "250",
                        "250",
                        "...",
                        "500",
                        "0",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA Levy co-funding budget",
                        "675",
                        "675",
                        "675",
                        "...",
                        "450",
                        "2700",
                        "0"});
<<<<<<< HEAD
            table265.AddRow(new string[] {
=======
            table247.AddRow(new string[] {
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 229
<<<<<<< HEAD
        testRunner.And("the earnings and payments break down for provider B is as follows:", ((string)(null)), table265, "And ");
=======
        testRunner.And("the earnings and payments break down for provider B is as follows:", ((string)(null)), table247, "And ");
>>>>>>> 7bc21fefe0d241cf7891a6640d19a7e1a5b99fb4
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
