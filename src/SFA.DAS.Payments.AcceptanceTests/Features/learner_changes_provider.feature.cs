// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Apprentice changes provider scenarios")]
    public partial class ApprenticeChangesProviderScenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "learner_changes_provider.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Apprentice changes provider scenarios", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice changes provider but remains with the same employer, and there is a ga" +
            "p between the two learning spells")]
        public virtual void ApprenticeChangesProviderButRemainsWithTheSameEmployerAndThereIsAGapBetweenTheTwoLearningSpells()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice changes provider but remains with the same employer, and there is a ga" +
                    "p between the two learning spells", ((string[])(null)));
#line 3
    this.ScenarioSetup(scenarioInfo);
#line 4
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table145.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "04/03/2018"});
            table145.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "05/03/2018",
                        ""});
            table145.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "01/06/2018",
                        "01/11/2018",
                        "4500",
                        "active",
                        "06/06/2018",
                        ""});
#line 6
        testRunner.And("the following commitments exist:", ((string)(null)), table145, "And ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table146.AddRow(new string[] {
                        "provider a",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "04/03/2018",
                        "Cancelled",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017"});
            table146.AddRow(new string[] {
                        "provider b",
                        "learner a",
                        "06/06/2018",
                        "20/11/2018",
                        "",
                        "continuing",
                        "3000",
                        "06/06/2018",
                        "1500",
                        "06/06/2018"});
#line 12
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table146, "When ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 02/18",
                        "06/18 onwards"});
            table147.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        "2"});
#line 17
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table147, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "02/18",
                        "03/18"});
            table148.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table148.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table148.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table148.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table148.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table148.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table148.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table148.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table148.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 21
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table148, "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "06/18",
                        "07/18",
                        "08/18",
                        "09/18",
                        "10/18",
                        "11/18"});
            table149.AddRow(new string[] {
                        "Provider Earned Total",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table149.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table149.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720"});
            table149.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720"});
            table149.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table149.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 33
        testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table149, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice changes provider but remains with the same employer")]
        public virtual void ApprenticeChangesProviderButRemainsWithTheSameEmployer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice changes provider but remains with the same employer", ((string[])(null)));
#line 46
    this.ScenarioSetup(scenarioInfo);
#line 47
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table150.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "04/03/2018"});
            table150.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "05/03/2018",
                        ""});
            table150.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "05/03/2018",
                        "01/08/2018",
                        "4500",
                        "active",
                        "05/03/2018",
                        ""});
#line 49
        testRunner.And("the following commitments exist:", ((string)(null)), table150, "And ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table151.AddRow(new string[] {
                        "provider a",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "04/03/2018",
                        "withdrawn",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017"});
            table151.AddRow(new string[] {
                        "provider b",
                        "learner a",
                        "05/03/2018",
                        "20/08/2018",
                        "",
                        "continuing",
                        "3000",
                        "05/03/2018",
                        "1500",
                        "05/03/2018"});
#line 54
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table151, "When ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 02/18",
                        "03/18 onwards"});
            table152.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        "2"});
#line 58
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table152, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "02/18",
                        "03/18"});
            table153.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table153.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table153.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table153.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table153.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table153.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table153.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table153.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table153.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 61
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "03/18",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18"});
            table154.AddRow(new string[] {
                        "Provider Earned Total",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table154.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table154.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table154.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720"});
            table154.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table154.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720"});
            table154.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "720",
                        "720",
                        "720",
                        "720",
                        "720",
                        "0"});
            table154.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table154.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 72
        testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table154, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice changes provider but remains with the same employer, ILR changes after" +
            " the new commitment is in place")]
        public virtual void ApprenticeChangesProviderButRemainsWithTheSameEmployerILRChangesAfterTheNewCommitmentIsInPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice changes provider but remains with the same employer, ILR changes after" +
                    " the new commitment is in place", ((string[])(null)));
#line 85
    this.ScenarioSetup(scenarioInfo);
#line 86
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table155.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "04/03/2018"});
            table155.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "05/03/2018",
                        ""});
            table155.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "05/03/2018",
                        "01/08/2018",
                        "4500",
                        "active",
                        "05/03/2018",
                        ""});
#line 88
        testRunner.And("the following commitments exist:", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table156.AddRow(new string[] {
                        "provider a",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "04/04/2018",
                        "withdrawn",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017"});
            table156.AddRow(new string[] {
                        "provider b",
                        "learner a",
                        "05/04/2018",
                        "08/08/2018",
                        "",
                        "continuing",
                        "3000",
                        "05/04/2018",
                        "1500",
                        "05/04/2018"});
#line 93
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table156, "When ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 03/18",
                        "04/18 onwards"});
            table157.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        "2"});
#line 97
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table157, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "02/18",
                        "03/18",
                        "04/18"});
            table158.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "0"});
            table158.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0",
                        "0"});
            table158.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table158.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "0"});
            table158.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table158.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500",
                        "0"});
            table158.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0",
                        "0"});
            table158.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
            table158.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0",
                        "0"});
#line 100
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table158, "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "04/18",
                        "05/18",
                        "06/18",
                        "07/18",
                        "08/18"});
            table159.AddRow(new string[] {
                        "Provider Earned Total",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0"});
            table159.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0"});
            table159.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900"});
            table159.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "900",
                        "900",
                        "900",
                        "900"});
            table159.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "900",
                        "900",
                        "900",
                        "900",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table159.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 111
        testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table159, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice changes provider but remains with the same employer, ILR changes befor" +
            "e the new commitment is in place")]
        public virtual void ApprenticeChangesProviderButRemainsWithTheSameEmployerILRChangesBeforeTheNewCommitmentIsInPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice changes provider but remains with the same employer, ILR changes befor" +
                    "e the new commitment is in place", ((string[])(null)));
#line 124
    this.ScenarioSetup(scenarioInfo);
#line 125
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table160.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "04/03/2018"});
            table160.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "05/03/2018",
                        ""});
            table160.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "05/03/2018",
                        "01/08/2018",
                        "4500",
                        "active",
                        "05/03/2018",
                        ""});
#line 127
        testRunner.And("the following commitments exist:", ((string)(null)), table160, "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table161.AddRow(new string[] {
                        "provider a",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "04/02/2018",
                        "withdrawn",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017"});
            table161.AddRow(new string[] {
                        "provider b",
                        "learner a",
                        "05/02/2018",
                        "20/08/2018",
                        "",
                        "continuing",
                        "3000",
                        "05/02/2018",
                        "1500",
                        "05/02/2018"});
#line 132
        testRunner.When("the providers submit the following ILR files:", ((string)(null)), table161, "When ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 01/18",
                        "02/18 onwards"});
            table162.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        ""});
#line 136
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table162, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "...",
                        "01/18",
                        "02/18"});
            table163.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table163.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table163.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table163.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table163.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table163.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "...",
                        "500",
                        "500"});
            table163.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table163.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table163.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 139
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table163, "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "02/18",
                        "03/18",
                        "04/18",
                        "...",
                        "07/18",
                        "08/18"});
            table164.AddRow(new string[] {
                        "Provider Earned Total",
                        "600",
                        "600",
                        "600",
                        "...",
                        "600",
                        "0"});
            table164.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table164.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 150
        testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table164, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, levy available, changes provider, earns incentive payment i" +
            "n the transfer month - and the date at which the incentive is earned is before t" +
            "he transfer date")]
        public virtual void _1LearnerAged16_18LevyAvailableChangesProviderEarnsIncentivePaymentInTheTransferMonth_AndTheDateAtWhichTheIncentiveIsEarnedIsBeforeTheTransferDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 16-18, levy available, changes provider, earns incentive payment i" +
                    "n the transfer month - and the date at which the incentive is earned is before t" +
                    "he transfer date", ((string[])(null)));
#line 163
this.ScenarioSetup(scenarioInfo);
#line 165
  testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table165.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table165.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "15/11/2017",
                        ""});
            table165.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "15/11/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 166
  testRunner.And("the following commitments exist:", ((string)(null)), table165, "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "learner type",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table166.AddRow(new string[] {
                        "provider a",
                        "16-18 programme only DAS",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "14/11/2017",
                        "withdrawn",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017",
                        "",
                        "",
                        "",
                        ""});
            table166.AddRow(new string[] {
                        "provider b",
                        "16-18 programme only DAS",
                        "learner a",
                        "15/11/2017",
                        "08/08/2018",
                        "",
                        "continuing",
                        "",
                        "",
                        "",
                        "",
                        "4000",
                        "15/11/2017",
                        "1625",
                        "15/11/2017"});
#line 172
  testRunner.When("the providers submit the following ILR files:", ((string)(null)), table166, "When ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table167.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        "2"});
#line 177
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table167, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table168.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "0"});
            table168.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1000",
                        "0"});
            table168.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1000"});
            table168.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table168.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0"});
#line 181
       testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table168, "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table169.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "0"});
            table169.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0"});
            table169.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0"});
            table169.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500"});
            table169.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500"});
#line 193
        testRunner.And("the transaction types for the payments for provider a are:", ((string)(null)), table169, "And ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "11/17",
                        "12/17",
                        "01/18"});
            table170.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500"});
            table170.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500"});
            table170.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0"});
            table170.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500"});
            table170.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0"});
            table170.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500"});
            table170.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500"});
            table170.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0"});
            table170.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0"});
            table170.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0"});
#line 200
       testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table170, "And ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "11/17",
                        "12/17",
                        "01/18"});
            table171.AddRow(new string[] {
                        "On-program",
                        "0",
                        "500",
                        "500"});
            table171.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0"});
            table171.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0"});
            table171.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0"});
            table171.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0"});
#line 212
        testRunner.And("the transaction types for the payments for provider b are:", ((string)(null)), table171, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1 learner aged 16-18, levy available, changes provider, earns incentive payment i" +
            "n the commitment transfer month - and the ILR transfer happens in a later month")]
        public virtual void _1LearnerAged16_18LevyAvailableChangesProviderEarnsIncentivePaymentInTheCommitmentTransferMonth_AndTheILRTransferHappensInALaterMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1 learner aged 16-18, levy available, changes provider, earns incentive payment i" +
                    "n the commitment transfer month - and the ILR transfer happens in a later month", ((string[])(null)));
#line 221
this.ScenarioSetup(scenarioInfo);
#line 223
  testRunner.Given("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "Provider",
                        "ULN",
                        "price effective date",
                        "planned end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table172.AddRow(new string[] {
                        "1",
                        "1",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "active",
                        "01/08/2017",
                        "14/11/2017"});
            table172.AddRow(new string[] {
                        "1",
                        "2",
                        "provider a",
                        "learner a",
                        "01/08/2017",
                        "01/08/2018",
                        "7500",
                        "withdrawn",
                        "15/11/2017",
                        ""});
            table172.AddRow(new string[] {
                        "2",
                        "1",
                        "provider b",
                        "learner a",
                        "15/11/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "15/11/2017",
                        ""});
#line 224
  testRunner.And("the following commitments exist:", ((string)(null)), table172, "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "Provider",
                        "learner type",
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date",
                        "Residual training price",
                        "Residual training price effective date",
                        "Residual assessment price",
                        "Residual assessment price effective date"});
            table173.AddRow(new string[] {
                        "provider a",
                        "16-18 programme only DAS",
                        "learner a",
                        "06/08/2017",
                        "08/08/2018",
                        "14/12/2017",
                        "withdrawn",
                        "6000",
                        "06/08/2017",
                        "1500",
                        "06/08/2017",
                        "",
                        "",
                        "",
                        ""});
            table173.AddRow(new string[] {
                        "provider b",
                        "16-18 programme only DAS",
                        "learner a",
                        "15/12/2017",
                        "08/09/2018",
                        "",
                        "continuing",
                        "",
                        "",
                        "",
                        "",
                        "4000",
                        "15/12/2017",
                        "1625",
                        "15/12/2017"});
#line 230
  testRunner.When("the providers submit the following ILR files:", ((string)(null)), table173, "When ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "type",
                        "08/17 - 10/17",
                        "11/17 -11/17",
                        "12/17 onwards"});
            table174.AddRow(new string[] {
                        "matching commitment",
                        "1",
                        "",
                        "2"});
#line 235
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table174, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table175.AddRow(new string[] {
                        "Provider Earned Total",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "0"});
            table175.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "500",
                        "500",
                        "500",
                        "1500",
                        "0"});
            table175.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table175.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "500",
                        "500",
                        "500",
                        "1000"});
            table175.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table175.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "500",
                        "500",
                        "500",
                        "0"});
            table175.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "500",
                        "500",
                        "500",
                        "0",
                        "0"});
            table175.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table175.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
            table175.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "1000",
                        "0"});
#line 239
        testRunner.And("the earnings and payments break down for provider a is as follows:", ((string)(null)), table175, "And ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table176.AddRow(new string[] {
                        "On-program",
                        "500",
                        "500",
                        "500",
                        "0"});
            table176.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0"});
            table176.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0"});
            table176.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500"});
            table176.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "500"});
#line 252
         testRunner.And("the transaction types for the payments for provider a are:", ((string)(null)), table176, "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table177.AddRow(new string[] {
                        "Provider Earned Total",
                        "0",
                        "500",
                        "500",
                        "500"});
            table177.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "0",
                        "500",
                        "500",
                        "500"});
            table177.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table177.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "0",
                        "500",
                        "500"});
            table177.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0"});
            table177.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "0",
                        "500",
                        "500"});
            table177.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "0",
                        "500",
                        "500",
                        "500"});
            table177.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table177.AddRow(new string[] {
                        "SFA non-Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0"});
            table177.AddRow(new string[] {
                        "SFA Levy additional payments budget",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 260
        testRunner.And("the earnings and payments break down for provider b is as follows:", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "Payment type",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18"});
            table178.AddRow(new string[] {
                        "On-program",
                        "0",
                        "0",
                        "500",
                        "500"});
            table178.AddRow(new string[] {
                        "Completion",
                        "0",
                        "0",
                        "0",
                        "0"});
            table178.AddRow(new string[] {
                        "Balancing",
                        "0",
                        "0",
                        "0",
                        "0"});
            table178.AddRow(new string[] {
                        "Employer 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0"});
            table178.AddRow(new string[] {
                        "Provider 16-18 incentive",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 273
         testRunner.And("the transaction types for the payments for provider b are:", ((string)(null)), table178, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
