// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SFA.DAS.Payments.AcceptanceTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Provider earnings and payments where learner changes apprenticeship standard or t" +
        "here is a change to the negotiated price at the end of a month, remaining with t" +
        "he same employer and provider")]
    public partial class ProviderEarningsAndPaymentsWhereLearnerChangesApprenticeshipStandardOrThereIsAChangeToTheNegotiatedPriceAtTheEndOfAMonthRemainingWithTheSameEmployerAndProviderFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "change_in_circumstances.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-GB"), "Provider earnings and payments where learner changes apprenticeship standard or t" +
                    "here is a change to the negotiated price at the end of a month, remaining with t" +
                    "he same employer and provider", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
    #line 4
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
        testRunner.And("the apprenticeship funding band maximum is 17000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 6
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes and data lock is passed in both instances")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesAndDataLockIsPassedInBothInstances()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes and data lock is passed in both instances", ((string[])(null)));
#line 8
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table84.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table84.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "03/11/2017",
                        ""});
#line 9
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table84, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table85.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "01/08/2018",
                        "31/10/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table85.AddRow(new string[] {
                        "learner a",
                        "52",
                        "03/11/2017",
                        "01/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 13
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table85, "When ");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table86.AddRow(new string[] {
                        "Matching commitment",
                        "1",
                        "1"});
#line 17
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table86, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table87.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table87.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table87.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table87.AddRow(new string[] {
                        "Employer Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table87.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "0"});
            table87.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 20
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table87, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ILR changes before second Commitment starts (i.e. there is only one existing Comm" +
            "itment in place)")]
        public virtual void ILRChangesBeforeSecondCommitmentStartsI_E_ThereIsOnlyOneExistingCommitmentInPlace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ILR changes before second Commitment starts (i.e. there is only one existing Comm" +
                    "itment in place)", ((string[])(null)));
#line 30
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price"});
            table88.AddRow(new string[] {
                        "1",
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "15000"});
#line 31
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table88, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table89.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "01/08/2018",
                        "31/10/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table89.AddRow(new string[] {
                        "learner a",
                        "52",
                        "03/11/2017",
                        "01/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "03/11/2017",
                        "1125",
                        "03/11/2017"});
#line 34
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table89, "When ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table90.AddRow(new string[] {
                        "Matching commitment",
                        "1",
                        ""});
#line 38
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table90, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table91.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table91.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table91.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table91.AddRow(new string[] {
                        "Employer Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table91.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table91.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 41
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table91, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("New Commitment which is not reflected in the updated ILR submission (i.e. new Com" +
            "mitment but no corresponding change in the ILR).")]
        public virtual void NewCommitmentWhichIsNotReflectedInTheUpdatedILRSubmissionI_E_NewCommitmentButNoCorrespondingChangeInTheILR_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("New Commitment which is not reflected in the updated ILR submission (i.e. new Com" +
                    "mitment but no corresponding change in the ILR).", ((string[])(null)));
#line 51
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table92.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "15000",
                        "03/08/2017",
                        "31/10/2017"});
            table92.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "03/08/2017",
                        "04/08/2018",
                        "5625",
                        "01/11/2017",
                        ""});
#line 52
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table92, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table93.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
#line 56
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table93, "When ");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 onwards"});
            table94.AddRow(new string[] {
                        "Matching commitment",
                        "1"});
#line 59
        testRunner.Then("the data lock status of the ILR in 03/12/2017 is:", ((string)(null)), table94, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table95.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table95.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table95.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table95.AddRow(new string[] {
                        "Employer Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table95.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table95.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 62
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table95, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Apprentice goes on a planned break midway through the learning episode and this i" +
            "s notified through the ILR")]
        public virtual void ApprenticeGoesOnAPlannedBreakMidwayThroughTheLearningEpisodeAndThisIsNotifiedThroughTheILR()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Apprentice goes on a planned break midway through the learning episode and this i" +
                    "s notified through the ILR", ((string[])(null)));
#line 72
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table96.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "active",
                        "15000",
                        "01/09/2017",
                        "31/10/2017"});
            table96.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "paused",
                        "15000",
                        "01/11/2017",
                        "02/01/2018"});
            table96.AddRow(new string[] {
                        "1",
                        "3",
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "active",
                        "15000",
                        "03/01/2018",
                        ""});
#line 73
        testRunner.Given("the following commitments exist on 03/12/2017:", ((string)(null)), table96, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price",
                        "Total training price effective date",
                        "Total assessment price",
                        "Total assessment price effective date"});
            table97.AddRow(new string[] {
                        "learner a",
                        "01/09/2017",
                        "08/09/2018",
                        "31/10/2017",
                        "planned break",
                        "12000",
                        "01/09/2017",
                        "3000",
                        "01/09/2017"});
            table97.AddRow(new string[] {
                        "learner a",
                        "03/01/2018",
                        "08/11/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/01/2018",
                        "3000",
                        "03/01/2018"});
#line 78
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table97, "When ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18",
                        "02/18",
                        "...",
                        "10/18",
                        "11/18"});
            table98.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table98.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "...",
                        "1000",
                        "1000"});
            table98.AddRow(new string[] {
                        "Employer Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "...",
                        "1000",
                        "1000"});
            table98.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
#line 82
        testRunner.Then("the provider earnings and payments break down as follows:", ((string)(null)), table98, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens at the end of the month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensAtTheEndOfTheMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens at the end of the month", ((string[])(null)));
#line 90
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 91
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table99.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table99.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 93
        testRunner.And("the following commitments exist:", ((string)(null)), table99, "And ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table100.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "01/11/2017",
                        "1875",
                        "01/11/2017"});
#line 97
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table100, "When ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table101.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        "9375"});
#line 100
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table101, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table102.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table102.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table102.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table102.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table102.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table102.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table102.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table102.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 103
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table102, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens in the middle of the month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensInTheMiddleOfTheMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens in the middle of the month", ((string[])(null)));
#line 115
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 116
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table103.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table103.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 118
        testRunner.And("the following commitments exist:", ((string)(null)), table103, "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table104.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "10/11/2017",
                        "1875",
                        "10/11/2017"});
#line 122
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table104, "When ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table105.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        "9375"});
#line 125
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table105, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table106.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table106.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table106.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table106.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table106.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table106.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "...",
                        "500",
                        "500"});
            table106.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "...",
                        "500",
                        "0"});
            table106.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 128
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table106, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost which happens in the middle of the month and the ILR starts" +
            " earlier")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostWhichHappensInTheMiddleOfTheMonthAndTheILRStartsEarlier()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost which happens in the middle of the month and the ILR starts" +
                    " earlier", ((string[])(null)));
#line 140
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 141
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 142
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table107.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table107.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 143
        testRunner.And("the following commitments exist:", ((string)(null)), table107, "And ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date",
                        "Total training price 2",
                        "Total training price 2 effective date",
                        "Total assessment price 2",
                        "Total assessment price 2 effective date"});
            table108.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017",
                        "7500",
                        "24/10/2017",
                        "1875",
                        "24/10/2017"});
#line 147
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table108, "When ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 09/17",
                        "10/17 onwards"});
            table109.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        ""});
#line 150
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table109, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table110.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "550",
                        "550",
                        "550",
                        "...",
                        "550",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table110.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 153
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table110, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, and there is a change to" +
            " the Negotiated Cost and the ILR is not updated")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableAndThereIsAChangeToTheNegotiatedCostAndTheILRIsNotUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, and there is a change to" +
                    " the Negotiated Cost and the ILR is not updated", ((string[])(null)));
#line 165
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 166
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 167
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "start date",
                        "end date",
                        "status",
                        "agreed price",
                        "effective from",
                        "effective to"});
            table111.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "15000",
                        "01/08/2017",
                        "31/10/2017"});
            table111.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "01/08/2017",
                        "31/08/2018",
                        "active",
                        "9375",
                        "01/11/2017",
                        ""});
#line 168
        testRunner.And("the following commitments exist:", ((string)(null)), table111, "And ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table112.AddRow(new string[] {
                        "learner a",
                        "01/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "01/08/2017",
                        "3000",
                        "01/08/2017"});
#line 172
        testRunner.When("an ILR file is submitted with the following data:", ((string)(null)), table112, "When ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 onwards"});
            table113.AddRow(new string[] {
                        "Matching price",
                        "15000"});
#line 175
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table113, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "...",
                        "07/18",
                        "08/18"});
            table114.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "...",
                        "1000",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Earned from SFA",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Earned from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Payment due from Employer",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "Employer Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
            table114.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "...",
                        "0",
                        "0"});
#line 178
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table114, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes middle of month and data lock is passed in both instances")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesMiddleOfMonthAndDataLockIsPassedInBothInstances()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes middle of month and data lock is passed in both instances", ((string[])(null)));
#line 191
    this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 192
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 193
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table115.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table115.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 194
        testRunner.And("the following commitments exist:", ((string)(null)), table115, "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table116.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "10/11/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table116.AddRow(new string[] {
                        "learner a",
                        "52",
                        "11/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "11/11/2017",
                        "1125",
                        "11/11/2017"});
#line 198
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table116, "When ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table117.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        "5625"});
#line 203
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table117, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table118.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table118.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table118.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table118.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table118.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 207
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table118, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ILR changes standard in the middle of the month, but no corresponding change to t" +
            "he commitment is confirmed")]
        public virtual void ILRChangesStandardInTheMiddleOfTheMonthButNoCorrespondingChangeToTheCommitmentIsConfirmed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ILR changes standard in the middle of the month, but no corresponding change to t" +
                    "he commitment is confirmed", ((string[])(null)));
#line 215
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 216
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table119.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        ""});
#line 218
        testRunner.And("the following commitments exist:", ((string)(null)), table119, "And ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table120.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "10/11/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table120.AddRow(new string[] {
                        "learner a",
                        "52",
                        "11/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "11/11/2017",
                        "1125",
                        "11/11/2017"});
#line 221
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table120, "When ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table121.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        ""});
#line 226
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table121, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table122.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500",
                        "500"});
            table122.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table122.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 230
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table122, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes middle of month A commitment is updated to show a change in st" +
            "andard, mid-month, but the ILR does not reflect this")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesMiddleOfMonthACommitmentIsUpdatedToShowAChangeInStandardMid_MonthButTheILRDoesNotReflectThis()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes middle of month A commitment is updated to show a change in st" +
                    "andard, mid-month, but the ILR does not reflect this", ((string[])(null)));
#line 238
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 239
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table123.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table123.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 241
        testRunner.And("the following commitments exist:", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table124.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
#line 245
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table124, "When ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table125.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        ""});
#line 249
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table125, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table126.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "1000"});
            table126.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table126.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table126.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0",
                        "0"});
            table126.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 253
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table126, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later wi" +
            "thin the same month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterWithinTheSameMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later wi" +
                    "thin the same month", ((string[])(null)));
#line 261
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 262
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table127.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table127.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 264
        testRunner.And("the following commitments exist:", ((string)(null)), table127, "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table128.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "18/11/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table128.AddRow(new string[] {
                        "learner a",
                        "52",
                        "19/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "19/11/2017",
                        "1125",
                        "19/11/2017"});
#line 268
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table128, "When ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table129.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        "5625"});
#line 273
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table129, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table130.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table130.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table130.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "500"});
            table130.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table130.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 277
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table130, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later in" +
            " the next month")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterInTheNextMonth()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later in" +
                    " the next month", ((string[])(null)));
#line 285
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 286
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table131.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table131.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 288
        testRunner.And("the following commitments exist:", ((string)(null)), table131, "And ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table132.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "04/12/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table132.AddRow(new string[] {
                        "learner a",
                        "52",
                        "05/12/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "05/12/2017",
                        "1125",
                        "05/12/2017"});
#line 292
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table132, "When ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 11/17",
                        "12/17 onwards"});
            table133.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        "5625"});
#line 297
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table133, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17",
                        "01/18"});
            table134.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "1000",
                        "562.50",
                        "562.50"});
            table134.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50"});
            table134.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50"});
            table134.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "562.50",
                        "562.50"});
            table134.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 301
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table134, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
            " standard changes in the middle of the month and the ILR change happens later wi" +
            "thin the same month before commitment starts")]
        public virtual void EarningsAndPaymentsForADASLearnerLevyAvailableWhereTheApprenticeshipStandardChangesInTheMiddleOfTheMonthAndTheILRChangeHappensLaterWithinTheSameMonthBeforeCommitmentStarts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Earnings and payments for a DAS learner, levy available, where the apprenticeship" +
                    " standard changes in the middle of the month and the ILR change happens later wi" +
                    "thin the same month before commitment starts", ((string[])(null)));
#line 309
this.ScenarioSetup(scenarioInfo);
#line 3
    this.FeatureBackground();
#line 310
        testRunner.Given("The learner is programme only DAS", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 311
        testRunner.And("levy balance > agreed price for all months", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "commitment Id",
                        "version Id",
                        "ULN",
                        "standard code",
                        "start date",
                        "end date",
                        "agreed price",
                        "status",
                        "effective from",
                        "effective to"});
            table135.AddRow(new string[] {
                        "1",
                        "1",
                        "learner a",
                        "51",
                        "01/08/2017",
                        "01/08/2018",
                        "15000",
                        "active",
                        "01/08/2017",
                        "10/11/2017"});
            table135.AddRow(new string[] {
                        "1",
                        "2",
                        "learner a",
                        "52",
                        "01/08/2017",
                        "01/08/2018",
                        "5625",
                        "active",
                        "11/11/2017",
                        ""});
#line 312
        testRunner.And("the following commitments exist:", ((string)(null)), table135, "And ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ULN",
                        "standard code",
                        "start date",
                        "planned end date",
                        "actual end date",
                        "completion status",
                        "Total training price 1",
                        "Total training price 1 effective date",
                        "Total assessment price 1",
                        "Total assessment price 1 effective date"});
            table136.AddRow(new string[] {
                        "learner a",
                        "51",
                        "03/08/2017",
                        "04/08/2018",
                        "05/11/2017",
                        "transferred",
                        "12000",
                        "03/08/2017",
                        "3000",
                        "03/08/2017"});
            table136.AddRow(new string[] {
                        "learner a",
                        "52",
                        "06/11/2017",
                        "04/08/2018",
                        "",
                        "continuing",
                        "4500",
                        "06/11/2017",
                        "1125",
                        "06/11/2017"});
#line 316
        testRunner.When("an ILR file is submitted on 03/12/2017 with the following data:", ((string)(null)), table136, "When ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17 - 10/17",
                        "11/17 onwards"});
            table137.AddRow(new string[] {
                        "Matching price",
                        "15000",
                        ""});
#line 321
        testRunner.Then("the data lock status will be as follows:", ((string)(null)), table137, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Type",
                        "08/17",
                        "09/17",
                        "10/17",
                        "11/17",
                        "12/17"});
            table138.AddRow(new string[] {
                        "Provider Earned Total",
                        "1000",
                        "1000",
                        "1000",
                        "500",
                        "500"});
            table138.AddRow(new string[] {
                        "Provider Paid by SFA",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table138.AddRow(new string[] {
                        "Levy account debited",
                        "0",
                        "1000",
                        "1000",
                        "1000",
                        "0"});
            table138.AddRow(new string[] {
                        "SFA Levy employer budget",
                        "1000",
                        "1000",
                        "1000",
                        "0",
                        "0"});
            table138.AddRow(new string[] {
                        "SFA Levy co-funding budget",
                        "0",
                        "0",
                        "0",
                        "0",
                        "0"});
#line 325
        testRunner.And("the provider earnings and payments break down as follows:", ((string)(null)), table138, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
